apply plugin: 'scala'

apply plugin: 'maven'

group = 'apsu'
version = '1.0-SNAPSHOT'

ext {
  scalaMajorVersion = '2.10'
  scalaVersion = "${scalaMajorVersion}.3"
}

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url 'http://repo.typesafe.com/typesafe/repo'
  }
}

dependencies {

  // ------------------------------------------------------------
  // Platform

  compile "org.scala-lang:scala-library:${scalaVersion}"
  compile "org.scala-lang:scala-reflect:${scalaVersion}"

  // ------------------------------------------------------------
  // Misc. libraries

  compile 'log4j:log4j:1.2+'
  compile 'com.fasterxml.uuid:java-uuid-generator:3.1+'

  // ------------------------------------------------------------
  // Apsu

  compile "apsu:apsu-core:${version}"

  // ------------------------------------------------------------
  // Testing

  testCompile "org.scalatest:scalatest_${scalaMajorVersion}:2.0"
  testCompile 'junit:junit:4.11+'
  testCompile 'org.mockito:mockito-core:1.9+'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

task test(overwrite: true, dependsOn: testClasses) << {
  ant.taskdef(name: 'scalatest',
      classname: 'org.scalatest.tools.ScalaTestAntTask',
      classpath: sourceSets.test.runtimeClasspath.asPath
  )
  ant.scalatest(runpath: sourceSets.test.output.classesDir,
      haltonfailure: 'true',
      fork: 'false') {
    reporter(type: 'junitxml', directory: 'test-reports')
    reporter(type: 'stderr')
    if (System.properties.test) suite(classname: System.properties.test)
  }
}

compileScala {
  scalaCompileOptions.additionalParameters = [
      "-feature",
      "-language:reflectiveCalls", // used for config structural typing
      "-language:postfixOps"
  ]
}
